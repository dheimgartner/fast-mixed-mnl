% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compiler.R
\name{compileUtilityFunction}
\alias{compileUtilityFunction}
\title{Validate the utility functions against the dataset and generate the optimised logliklihood function}
\usage{
compileUtilityFunction(utility_script, dataset = NULL,
  output_file = NULL, compile = TRUE, model_name = "mixl_model")
}
\arguments{
\item{utility_script}{The utility script to be compiled}

\item{dataset}{An (optional) dataframe to check if the all the variables are present}

\item{output_file}{An (optional) location where the compiled code should be saved (useful for debugging}

\item{compile}{If compile is false, then the code will not be compiled, but just validated and saved if an \code{output_file} is specified}

\item{model_name}{A name for the model, which will be used for saving. Defaults to *mixl_model*}
}
\value{
An \code{object} which contains the loglikelihood function, and information from the compile process
}
\description{
This function takes a utility function description, and generates a optimised C++ version 
of the utility function which can be called from R. If the data_names are provided, then the variables
in the function are checked against those provided. If an \code{output_file} is provided, the C++ code is saved there. 
See the user guide vignette for how to write valid utility scripts. There is some minimal specific syntax required.
}
\seealso{
browseVignettes("mixl")
}
